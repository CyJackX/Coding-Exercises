using System;
using System.Collections.Generic;
using System.IO;

class Solution
{
    static List<int> primes = GeneratePrimes(2000 * 2000);

    static void Main(String[] args)
    {
        int N = Convert.ToInt32(Console.ReadLine());
        int maxn = 0;
        int maxb = 0;
        int maxa = 0;
        
        foreach (int prime in primes)
        {
            if (prime > N)
            {
                break;
            }
            
            int b = prime;
            
            for (int a = -N; a <= N; a++)
            {
                int n = maxn + 1;
                
                if (IsPrime(n * n + a * n + b))
                {
                    int candidateLength = MaxPrimeChain(a, b);
                    
                    if (candidateLength > maxn)
                    {
                        maxn = candidateLength;
                        maxb = b;
                        maxa = a;
                    }
                }
            }
        }

        Console.WriteLine($"{maxa} {maxb}");
    }

    static int MaxPrimeChain(int a, int b)
    {
        int n = 0;
        
        while (IsPrime(n * n + a * n + b))
        {
            n++;
        }
        
        return n - 1;
    }

    static bool IsPrime(int n)
    {
        if (n < 2)
        {
            return false;
        }
        
        if (n == 2)
        {
            return true;
        }

        foreach (int prime in primes)
        {
            if (n % prime == 0)
            {
                return false;
            }

            if (prime * prime > n)
            {
                return true;
            }
        }

        Console.WriteLine("prime too big");
        return false;
    }

    static List<int> GeneratePrimes(int n)
    {
        bool[] isPrime = new bool[n + 1];
        
        for (int i = 2; i <= n; i++)
        {
            isPrime[i] = true;
        }

        for (int i = 2; i * i <= n; i++)
        {
            if (isPrime[i])
            {
                for (int j = i * i; j <= n; j += i)
                {
                    isPrime[j] = false;
                }
            }
        }

        List<int> primesList = new List<int>();
        
        for (int i = 2; i <= n; i++)
        {
            if (isPrime[i])
            {
                primesList.Add(i);
            }
        }

        return primesList;
    }
}
