function primePermutations() {
  for(let i = 1489 ; i < 10000 ; i+=2){
    //console.log(i);
    if(isPrime(i)){
      let list = buildPermutations(i).map(x => parseInt(x));
      list = list.filter(x => isPrime(x) && x > i);
      for(let prime2 of list){
        let prime3 = prime2 + (prime2 - i);
        //console.log(i, prime2, prime3);
        if(list.indexOf(prime3) >= 0){
          //console.log(list);
          let ans = parseInt("" + i + prime2 + prime3);
          return ans;
        }
      }
    }
  }
}

//Build permutations
function buildPermutations(num) {
  
  if(num < 10){
    return [num];
  }
  let arr = num.toString().split('');
  let list = [];
  for(let i = 0 ; i < arr.length ; i++){
    //console.log(arr);
    let remaining = parseInt(arr.slice(0, i).concat(arr.slice(i + 1)).join(''));
    //console.log(remaining);
    for(let perm of buildPermutations(remaining)){
      list.push(arr[i].concat(perm));
    }    
  }
  return list;
}

function isPrime(n){
  if(n == 2){
    return true;
  }

  if(n < 2 || n % 2 == 0){
    return false;
  }

  for(let i = 3 ; i*i <= n ; i+=2){
    if(n % i == 0){
      return false;
    }
  }
  return true;
}

//console.log(buildPermutations(1411234));
console.log(primePermutations());