from typing import List
class Solution:
    def countOperationsToEmptyArray(self, nums: List[int]) -> int:
        
        minNums = sorted(enumerate(nums), key = lambda x: x[1])
        count = 0
        n = len(nums)
        for i in range(len(minNums)):
            index = nums.index(minNums[i][1])
            # print(n-i, index + 1, minNums[i], minNums[i][0] - minNums[i-1][0])
            nums = nums[index + 1:] + nums[0:index]
            # print(nums)
            count += 1 + index

        return count
    
    def op2(self, nums: List[int]) -> int:
        indexList = [i[0] for i in sorted(enumerate(nums), key=lambda x:x[1])]
        count = 0
        pointer = 0
        curr_loop_subtract = 0
        looped_subtract = 0
        for index in indexList:
            if pointer <= index:
                count += index - pointer + 1
                pointer = index + 1
                curr_loop_subtract += 1
            else:#wrap around
                count += index + (len(nums) - pointer) + 1
                pointer = index + 1
                count -= looped_subtract
                looped_subtract += curr_loop_subtract 
                curr_loop_subtract = 1
        count -= (pointer - curr_loop_subtract) 
        return count

import random
arr = set()
for _ in range(10):
    arr.add(random.randint(0,100))
arr = list(arr)
arr = [10,9,8,7,6,5,4,3,2,1]
print(arr)
print("correct:",Solution().countOperationsToEmptyArray(arr))

print(Solution().op2(arr))